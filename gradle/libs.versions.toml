[versions]
agp = "8.10.1"
androidx-lifecycle = "2.9.1"
assertk = "0.28.1"
coil3 = "3.0.4"
compose-hot-reload = "1.0.0-alpha10"
core = "1.6.0"
coroutines = "1.9.0"
dadb = "1.2.9"
dagp = "2.10.0"
dokka = "1.9.20"
exp4j = "0.4.8"
freemarker = "2.3.34"
espressoCore = "3.6.1"
androidx-test-core = "1.6.1"
androidx-test-monitor = "1.7.2"
gson = "2.11.0"
jackson = "2.18.2"
jansi = "2.4.1"
jetbrains-compose-multiplatform = "1.7.3"
jsoup = "1.19.1"
junit = "4.13.2"
kaml = "0.82.0"
koog = "0.3.0"
kotlin-csv = "1.10.0"
kotlin = "2.1.21"
kotlinpoet = "2.2.0"
kotlinx-datetime = "0.6.2"
kotlinx-serialization = "1.7.3"
ktor = "3.1.3"
logback = "1.5.13"
maestro = "2.0.0"
mcp-sdk = "0.5.0"
multiplatformSettings = "1.3.0"
okhttp = "4.12.0"
okio = "3.10.2"
paparazzi = "1.3.5"
picocli = "4.6.3"
androidx-test-runner = "1.6.2"
slf4j = "2.0.17"
slf4j-android = "1.7.36"
snakeyaml = "2.4"
spotless = "7.0.3"
testParameterInjector = "1.18"
truth = "1.4.4"
uiautomator = "2.3.0"
vanniktech-maven-publish = "0.31.0"
dependency-guard = "0.5.0"

[libraries]
android-gradle = { group = "com.android.tools.build", name = "gradle", version.ref = "agp" }
androidx-core-v160 = { module = "androidx.test:core", version.ref = "core" }
androidx-lifecycle-viewmodel = { module = "org.jetbrains.androidx.lifecycle:lifecycle-viewmodel", version.ref = "androidx-lifecycle" }
androidx-lifecycle-runtimeCompose = { module = "org.jetbrains.androidx.lifecycle:lifecycle-runtime-compose", version.ref = "androidx-lifecycle" }
androidx-test-core = { module = "androidx.test:core", version.ref = "androidx-test-core" }
androidx-test-runner = { module = "androidx.test:runner", version.ref = "androidx-test-runner" }
androidx-test-monitor = { group = "androidx.test", name = "monitor", version.ref = "androidx-test-monitor" }
androidx-espresso-core = { group = "androidx.test.espresso", name = "espresso-core", version.ref = "espressoCore" }
androidx-uiautomator = { group = "androidx.test.uiautomator", name = "uiautomator", version.ref = "uiautomator" }
assertk = { module = "com.willowtreeapps.assertk:assertk", version.ref = "assertk" }
coil3-compose = { module = "io.coil-kt.coil3:coil-compose", version.ref = "coil3" }
coil3-network-ktor = { module = "io.coil-kt.coil3:coil-network-ktor3", version.ref = "coil3" }
exp4j = { module = "net.objecthunter:exp4j", version.ref = "exp4j" }
freemarker = { module = "org.freemarker:freemarker", version.ref = "freemarker" }
kotlinx-io-core = { module = "org.jetbrains.kotlinx:kotlinx-io-core-jvm" }
coroutines = { module = "org.jetbrains.kotlinx:kotlinx-coroutines-core", version.ref = "coroutines" }
coroutines-android = { module = "org.jetbrains.kotlinx:kotlinx-coroutines-android", version.ref = "coroutines" }
dadb = { module = "dev.mobile:dadb", version.ref = "dadb" }
gson = { module = "com.google.code.gson:gson", version.ref = "gson" }
jackson-dataformat-yaml = { module = "com.fasterxml.jackson.dataformat:jackson-dataformat-yaml", version.ref = "jackson" }
jackson-module-kotlin = { module = "com.fasterxml.jackson.module:jackson-module-kotlin", version.ref = "jackson" }
jansi = { module = "org.fusesource.jansi:jansi", version.ref = "jansi" }
jsoup = { module = "org.jsoup:jsoup", version.ref = "jsoup" }
junit = { module = "junit:junit", version.ref = "junit" }
kaml = { module = "com.charleskorn.kaml:kaml", version.ref = "kaml" }
kotlin-gradle = { module = "org.jetbrains.kotlin:kotlin-gradle-plugin", version.ref = "kotlin" }
kotlinx-datetime = { module = "org.jetbrains.kotlinx:kotlinx-datetime", version.ref = "kotlinx-datetime" }
kotlinx-serialization-core = { module = "org.jetbrains.kotlinx:kotlinx-serialization-core", version.ref = "kotlinx-serialization" }
kotlinx-serialization-json = { module = "org.jetbrains.kotlinx:kotlinx-serialization-json", version.ref = "kotlinx-serialization" }
ktor-client-content-negotiation = { module = "io.ktor:ktor-client-content-negotiation", version.ref = "ktor" }
ktor-client-logging = { module = "io.ktor:ktor-client-logging", version.ref = "ktor" }
ktor-client-okhttp = { module = "io.ktor:ktor-client-okhttp", version.ref = "ktor" }
ktor-client-core-jvm = { module = "io.ktor:ktor-client-core-jvm", version.ref = "ktor" }
ktor-client-core = { module = "io.ktor:ktor-client-core", version.ref = "ktor" }
ktor-client-js = { module = "io.ktor:ktor-client-js", version.ref = "ktor" }
kotlin-csv = { module = "com.github.doyaaaaaken:kotlin-csv-jvm", version.ref = "kotlin-csv" }
kotlinpoet = { module = "com.squareup:kotlinpoet", version.ref = "kotlinpoet" }
ktor-http = { module = "io.ktor:ktor-http", version.ref = "ktor" }
ktor-serialization = { module = "io.ktor:ktor-serialization", version.ref = "ktor" }
ktor-server-cio = { module = "io.ktor:ktor-server-cio", version.ref = "ktor" }
ktor-client-content-negotiation-jvm = { module = "io.ktor:ktor-client-content-negotiation-jvm", version.ref = "ktor" }
ktor-events-jvm = { module = "io.ktor:ktor-events-jvm", version.ref = "ktor" }
ktor-serialization-kotlinx-json = { module = "io.ktor:ktor-serialization-kotlinx-json", version.ref = "ktor" }
ktor-serialization-jvm = { module = "io.ktor:ktor-serialization-jvm", version.ref = "ktor" }
ktor-server-content-negotiation = { module = "io.ktor:ktor-server-content-negotiation", version.ref = "ktor" }
ktor-server-core = { module = "io.ktor:ktor-server-core", version.ref = "ktor" }
ktor-server-core-jvm = { module = "io.ktor:ktor-server-core-jvm", version.ref = "ktor" }
ktor-server-freemarker = { module = "io.ktor:ktor-server-freemarker", version.ref = "ktor" }
ktor-server-websockets = { module = "io.ktor:ktor-server-websockets", version.ref = "ktor" }
ktor-server-netty = { module = "io.ktor:ktor-server-netty", version.ref = "ktor" }
ktor-server-cors = { module = "io.ktor:ktor-server-cors", version.ref = "ktor" }
ktor-server-jetty = { module = "io.ktor:ktor-server-jetty", version.ref = "ktor" }
ktor-server-tomcat = { module = "io.ktor:ktor-server-tomcat", version.ref = "ktor" }
ktor-server-jetty-jakarta = { module = "io.ktor:ktor-server-jetty-jakarta", version.ref = "ktor" }
ktor-network-tls-certificates = { module = "io.ktor:ktor-network-tls-certificates", version.ref = "ktor" }
koog-agents = { module = "ai.koog:koog-agents", version.ref = "koog" }
koog-agents-tools = { module = "ai.koog:agents-tools", version.ref = "koog" }
koog-prompt-executor-clients = { module = "ai.koog:prompt-executor-clients", version.ref = "koog" }
koog-prompt-executor-google = { module = "ai.koog:prompt-executor-google-client", version.ref = "koog" }
koog-prompt-executor-openai = { module = "ai.koog:prompt-executor-openai-client", version.ref = "koog" }
koog-prompt-executor-ollama = { module = "ai.koog:prompt-executor-ollama-client", version.ref = "koog" }
koog-prompt-llm = { module = "ai.koog:prompt-llm", version.ref = "koog" }
koog-prompt-model = { module = "ai.koog:prompt-model", version.ref = "koog" }
kotlin-test-junit4 = { group = "org.jetbrains.kotlin", name = "kotlin-test", version.ref = "kotlin" }
kotlin-test = { group = "org.jetbrains.kotlin", name = "kotlin-test-junit5", version.ref = "kotlin" }
kotlin-reflect = { group = "org.jetbrains.kotlin", name = "kotlin-reflect", version.ref = "kotlin" }
ktor-utils = { module = "io.ktor:ktor-utils", version.ref = "ktor" }
ktor-utils-jvm = { module = "io.ktor:ktor-utils-jvm", version.ref = "ktor" }
ktor-websockets = { module = "io.ktor:ktor-websockets", version.ref = "ktor" }
logback-classic = { module = "ch.qos.logback:logback-classic", version.ref = "logback" }
maestro-client = { module = "dev.mobile:maestro-client", version.ref = "maestro" }
maestro-cli = { module = "dev.mobile:maestro-cli", version.ref = "maestro" }
maestro-ios = { module = "dev.mobile:maestro-ios", version.ref = "maestro" }
maestro-ios-driver = { module = "dev.mobile:maestro-ios-driver", version.ref = "maestro" }
maestro-orchestra = { module = "dev.mobile:maestro-orchestra", version.ref = "maestro" }
maestro-orchestra-models = { module = "dev.mobile:maestro-orchestra-models", version.ref = "maestro" }
maestro-utils = { module = "dev.mobile:maestro-utils", version.ref = "maestro" }
maestro-web = { module = "dev.mobile:maestro-web", version.ref = "maestro" }
mcp-sdk = { module = "io.modelcontextprotocol:kotlin-sdk", version.ref = "mcp-sdk" }
multiplatform-settings = { module = "com.russhwolf:multiplatform-settings", version.ref = "multiplatformSettings" }
material-icons-extended = { module = "org.jetbrains.compose.material:material-icons-extended", version.ref = "jetbrains-compose-multiplatform" }
okhttp = { module = "com.squareup.okhttp3:okhttp", version.ref = "okhttp" }
okio = { module = "com.squareup.okio:okio", version.ref = "okio" }
picocli = { module = "info.picocli:picocli", version.ref = "picocli" }
slf4j-android = { module = "org.slf4j:slf4j-android", version.ref = "slf4j-android" }
slf4j-api = { module = "org.slf4j:slf4j-api", version.ref = "slf4j" }
slf4j-simple = { module = "org.slf4j:slf4j-simple", version.ref = "slf4j" }
snakeyaml = { module = "org.yaml:snakeyaml", version.ref = "snakeyaml" }
test-parameter-injector = { module = "com.google.testparameterinjector:test-parameter-injector", version.ref = "testParameterInjector" }
truth = { module = "com.google.truth:truth", version.ref = "truth" }

[plugins]
android-library = { id = "com.android.library", version.ref = "agp" }
buildConfig = { id = "com.github.gmazzo.buildconfig", version = "5.6.2" }
dependency-guard = { id = "com.dropbox.dependency-guard", version.ref = "dependency-guard" }
kotlin-android = { id = "org.jetbrains.kotlin.android", version.ref = "kotlin" }
kotlin-jvm = { id = "org.jetbrains.kotlin.jvm", version.ref = "kotlin" }
kotlin-multiplatform = { id = "org.jetbrains.kotlin.multiplatform", version.ref = "kotlin" }
kotlin-serialization = { id = "org.jetbrains.kotlin.plugin.serialization", version.ref = "kotlin" }
vanniktech-maven-publish = { id = "com.vanniktech.maven.publish.base", version.ref = "vanniktech-maven-publish" }
dokka = { id = "org.jetbrains.dokka", version.ref = "dokka" }
jetbrains-compose-multiplatform = { id = "org.jetbrains.compose", version.ref = "jetbrains-compose-multiplatform" }
compose-compiler = { id = "org.jetbrains.kotlin.plugin.compose", version.ref = "kotlin" }
compose-hot-reload = { id = "org.jetbrains.compose.hot-reload", version.ref = "compose-hot-reload" }
paparazzi = { id = "app.cash.paparazzi", version.ref = "paparazzi" }
spotless = { id = "com.diffplug.spotless", version.ref = "spotless" }
dagp = { id = "com.autonomousapps.dependency-analysis", version.ref = "dagp" }
